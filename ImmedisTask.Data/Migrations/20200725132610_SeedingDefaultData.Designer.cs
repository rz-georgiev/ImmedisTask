// <auto-generated />
using System;
using ImmedisTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ImmedisTask.Data.Migrations
{
    [DbContext(typeof(ImmedisDbContext))]
    [Migration("20200725132610_SeedingDefaultData")]
    partial class SeedingDefaultData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ImmedisTask.Data.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CommentContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            Author = "Jennifer Aniston",
                            CommentContent = "Achievement #1 unlocked",
                            CreatedDateTime = new DateTime(2020, 7, 25, 16, 16, 55, 353, DateTimeKind.Unspecified).AddTicks(80),
                            EmployeeId = 9,
                            IsActive = true,
                            LastUpdatedDateTime = new DateTime(2020, 7, 25, 16, 19, 23, 873, DateTimeKind.Unspecified).AddTicks(3560)
                        },
                        new
                        {
                            Id = 7,
                            Author = "Tom Cruise",
                            CommentContent = "Achievement #2 unlocked",
                            CreatedDateTime = new DateTime(2020, 7, 25, 16, 19, 39, 235, DateTimeKind.Unspecified).AddTicks(5800),
                            EmployeeId = 9,
                            IsActive = true,
                            LastUpdatedDateTime = new DateTime(2020, 7, 25, 16, 19, 46, 839, DateTimeKind.Unspecified).AddTicks(4990)
                        },
                        new
                        {
                            Id = 5,
                            Author = "John Travolta",
                            CommentContent = "Achievement #3 unlocked",
                            CreatedDateTime = new DateTime(2020, 7, 25, 16, 15, 9, 382, DateTimeKind.Unspecified).AddTicks(5260),
                            EmployeeId = 8,
                            IsActive = true,
                            LastUpdatedDateTime = new DateTime(2020, 7, 25, 16, 20, 12, 24, DateTimeKind.Unspecified).AddTicks(1870)
                        },
                        new
                        {
                            Id = 4,
                            Author = "Meg Ryen",
                            CommentContent = "Achievement #4 unlocked",
                            CreatedDateTime = new DateTime(2020, 7, 25, 15, 19, 10, 847, DateTimeKind.Unspecified).AddTicks(9050),
                            EmployeeId = 8,
                            IsActive = true,
                            LastUpdatedDateTime = new DateTime(2020, 7, 25, 16, 20, 39, 95, DateTimeKind.Unspecified).AddTicks(3540)
                        },
                        new
                        {
                            Id = 8,
                            Author = "Louis de Funes",
                            CommentContent = "Achievement #5 unlocked",
                            CreatedDateTime = new DateTime(2020, 7, 25, 16, 21, 7, 573, DateTimeKind.Unspecified).AddTicks(8040),
                            EmployeeId = 8,
                            IsActive = true
                        });
                });

            modelBuilder.Entity("ImmedisTask.Data.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateJoinedCompany")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMonthly")
                        .HasColumnType("boolean");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastUpdatedDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("LineManagerEmployeeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 9,
                            Address = "Sofia",
                            Amount = 1300.00m,
                            CreatedDateTime = new DateTime(2020, 7, 25, 16, 16, 13, 561, DateTimeKind.Unspecified).AddTicks(2570),
                            DateJoinedCompany = new DateTime(2020, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "HR",
                            FirstName = "Tom",
                            IsActive = true,
                            IsMonthly = true,
                            JobTitle = "HR specialist",
                            LastName = "Hanks",
                            LastUpdatedDateTime = new DateTime(2020, 7, 25, 16, 17, 57, 337, DateTimeKind.Unspecified).AddTicks(1830),
                            LineManagerEmployeeId = 8
                        },
                        new
                        {
                            Id = 8,
                            Address = "Varna",
                            Amount = 1200.00m,
                            CreatedDateTime = new DateTime(2020, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateJoinedCompany = new DateTime(2020, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Department = "IT",
                            FirstName = "Nicolas",
                            IsActive = true,
                            IsMonthly = false,
                            JobTitle = "Developer",
                            LastName = "Cage",
                            LastUpdatedDateTime = new DateTime(2020, 7, 25, 16, 18, 28, 505, DateTimeKind.Unspecified).AddTicks(2170),
                            LineManagerEmployeeId = 9
                        });
                });

            modelBuilder.Entity("ImmedisTask.Data.Models.Comment", b =>
                {
                    b.HasOne("ImmedisTask.Data.Models.Employee", "Employee")
                        .WithMany("Comments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
